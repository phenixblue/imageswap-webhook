---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: {{ template "imageswap.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
  name: {{ template "imageswap.fullname" . }}
  namespace: "{{ .Release.Namespace }}"
spec:
  replicas: {{ default 2 .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: {{ template "imageswap.fullname" . }}
      release: "{{ .Release.Name }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: "RollingUpdate"
  template:
    metadata:
      labels:
        app: {{template "imageswap.fullname" .}}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        heritage: "{{ .Release.Service }}"
        release: "{{ .Release.Name }}"
    spec:
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      serviceAccountName: {{ template "imageswap.fullname" . }}-sa
      securityContext:
        runAsUser: 1898
        runAsGroup: 1898
      initContainers:
        - name: {{ template "imageswap.fullname" . }}-init
          image: {{ .Values.pod.init.image | quote }}
          command: [/app/imageswap-init.py]
          imagePullPolicy: Always
          securityContext:
            allowPrivilegeEscalation: false
          env:
          - name: IMAGESWAP_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: IMAGESWAP_NAMESPACE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          envFrom:
            - configMapRef:
                name: {{ template "imageswap.fullname" . }}-env
          volumeMounts:
            - name: {{ template "imageswap.fullname" . }}-tls
              mountPath: /tls
            - name: {{ template "imageswap.fullname" . }}-mwc
              mountPath: /mwc
      containers:
        - name: {{ template "imageswap.fullname" . }}
          image: {{ .Values.pod.imageswap.image | quote }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          command: ["gunicorn", "imageswap:app", "--config=config.py"]
          imagePullPolicy: Always
          securityContext:
              allowPrivilegeEscalation: false
          env:
            - name: IMAGESWAP_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: IMAGESWAP_NAMESPACE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- toYaml .Values.extraEnv | nindent 12 }}
          envFrom:
              - configMapRef:
                  name: {{ template "imageswap.fullname" . }}-env
          volumeMounts:
            - name: {{ template "imageswap.fullname" . }}-tls
              mountPath: /tls
            - name: {{ template "imageswap.fullname" . }}-maps
              mountPath: /app/maps
      volumes:
        - name: imageswap-mwc
          configMap:
              name: imageswap-mwc-template
              items:
              - key: imageswap-mwc
                path: imageswap-mwc.yaml
        - name: imageswap-maps
          configMap:
              name: imageswap-maps
              items:
              - key: maps
                path: imageswap-maps.conf
        - name: imageswap-tls
          emptyDir: {}
